<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Duality.Plugins.Pathfindax.core</name>
    </assembly>
    <members>
        <member name="T:Duality.Plugins.Pathfindax.Components.AStarPathfinderComponent">
            <summary>
            Provides a way for other components to request a path from A to B. Uses the A* algorithm.
            </summary>
        </member>
        <member name="T:Duality.Plugins.Pathfindax.Grid.NodeGridVisualizer">
            <summary>
            Class for visualizing a <see cref="T:Pathfindax.Grid.INodeGrid`1"/>
            </summary>
        </member>
        <member name="M:Duality.Plugins.Pathfindax.Grid.NodeGridVisualizer.Draw(Duality.Drawing.IDrawDevice)">
            <summary>
            This will draw the <see cref="T:Pathfindax.Nodes.IGridNode"/> and their connectons to other <see cref="T:Pathfindax.Nodes.IGridNode"/> in the <see cref="T:Pathfindax.Grid.INodeGrid`1"/>
            </summary>
        </member>
        <member name="T:Duality.Plugins.Pathfindax.PathfindaxDualityCorePlugin">
            <summary>
            Defines a Duality core plugin.
            </summary>
        </member>
        <member name="M:Duality.Plugins.Pathfindax.PathfindaxDualityCorePlugin.GetPathfinder(System.String)">
            <summary>
            Gets the <see cref="T:Duality.Plugins.Pathfindax.Components.IPathfinderComponent"/> with the same id. If the <paramref name="id"/> parameter is null then the first pathfinder will be returned.
            If there are multiple pathfinders and no id was supplied this will throw a exception.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Duality.Plugins.Pathfindax.PathfindEngine.PathfinderProxy">
            <summary>
            Provides access to the pathfinder
            </summary>
        </member>
    </members>
</doc>
