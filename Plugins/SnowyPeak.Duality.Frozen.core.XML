<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SnowyPeak.Duality.Frozen.core</name>
    </assembly>
    <members>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ColorizeText">
            <summary>
            TimedCommand used to alter over time the colorization of a SpriteRenderer
            </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.TimedCommand`1">
            <summary>
            Abstract class used in order to allow the Command to target a specific Component.
            An Exception is thrown if the required Component is not present inside the Commanded GameObject.
            Provides utility methods to define the duration of the Command based on a time, or a speed.
            </summary>
            <typeparam name="T">The Type of the required Component</typeparam>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Command`1">
            <summary>
            Abstract class used in order to allow the Command to target a specific Component.
            An Exception is thrown if the required Component is not present inside the Commanded GameObject.
            </summary>
            <typeparam name="T">The Type of the required Component</typeparam>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Command">
            <summary>
            Abstract class acting as the base for all Commands
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Command.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Command.Initialize(Duality.GameObject)">
            <summary>
            Initializes the command
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Command.IsComplete">
            <summary>
            Indicates if the command completed its execution
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Command`1.GetComponent(Duality.GameObject)">
             <summary>
            
             </summary>
             <param name="inGameObject"></param>
             <returns></returns>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.TimedCommand`1._timePast">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.TimedCommand`1._timeToComplete">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.TimedCommand`1.FixedSpeed(System.Single)">
            <summary>
            Calculates the time to completion depending on the desired speed and command length
            </summary>
            <param name="inSpeed"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.TimedCommand`1.Timed(System.Single)">
            <summary>
            Sets the completion time
            </summary>
            <param name="inTime"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.TimedCommand`1.GetCommandLength">
            <summary>
            Returns the length, in abstract, of the command before it reaches its completion. Used for FixedSpeed commands
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ColorizeText.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ColorizeText.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ColorizeText.GetCommandLength">
            <summary>
            Returns the length, in abstract, of the command before it reaches its completion. Used for FixedSpeed commands
            </summary>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.ColorRgbaExtensions">
            <summary>
            ColorRgba Extensions
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.ColorRgbaExtensions.ToFloatArray(Duality.Drawing.ColorRgba)">
            <summary>
            Converts a ColorRgba to float array
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.ColorRgbaExtensions.ToVector4(Duality.Drawing.ColorRgba)">
            <summary>
            Converts a ColorRgba to Vector4 (R, G, B, A) = (X, Y, Z, W)
            </summary>
            <param name="value">The Color</param>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ColorizeSprite">
            <summary>
            TimedCommand used to alter over time the colorization of a SpriteRenderer
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ColorizeSprite.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ColorizeSprite.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ColorizeSprite.GetCommandLength">
            <summary>
            Returns the length, in abstract, of the command before it reaches its completion. Used for FixedSpeed commands
            </summary>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ParallelCommand">
            <summary>
            Command encapsulating a list of Commands that will be carried out in parallel on a single GameObject.
            The ParallelCommand will be considered Complete once all subCommands are completed.
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ParallelCommand.Add(SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Command)">
            <summary>
            Adds a Command to the parallel execution list
            </summary>
            <param name="inCommand"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ParallelCommand.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.ParallelCommand.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Scale">
            <summary>
            TimedCommand used to alter a GameObject's scale
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Scale.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Scale.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Scale.GetCommandLength">
            <summary>
            Returns the length, in abstract, of the command before it reaches its completion. Used for FixedSpeed commands
            </summary>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Destroy">
            <summary>
            Command used to destroy (dispose and remove from the Scene) a GameObject
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Destroy.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Destroy.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Signal">
            <summary>
            A utility Command used to send a signal to the other Commands. Used for command synchronization via WaitFor
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Signal.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Signal.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Signal.Value">
            <summary>
            The Value of the Signal
            </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.WaitFor">
            <summary>
            A utility Command that waits for a signal coming from another GameObject. Used for command synchronization
            via Signal
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.WaitFor.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.WaitFor.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Wait">
            <summary>
            A Command used to stop the execution of the following Command until enough time has elapsed.
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Wait.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Wait.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Move">
            <summary>
            TimedCommand used to Move a GameObject in 3D
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Move.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Move.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Move.GetCommandLength">
            <summary>
            Returns the length, in abstract, of the command before it reaches its completion. Used for FixedSpeed commands
            </summary>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Rotate">
            <summary>
            TimedCommand used to rotate a GameObject around its Z axis.
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Rotate.Execute(System.Single,Duality.GameObject)">
            <summary>
            Advances the command's execution
            </summary>
            <param name="inSecondsPast"></param>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Rotate.Initialize(Duality.GameObject)">
            <summary>
            Initialization
            </summary>
            <param name="inGameObject"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Commands.Rotate.GetCommandLength">
            <summary>
            Returns the length, in abstract, of the command before it reaches its completion. Used for FixedSpeed commands
            </summary>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2">
            <summary>
            A two-way Dictionary that allows to lookup a Value given a Key or a Key given a Value.
            Based on http://stackoverflow.com/a/10966684
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="V"></typeparam>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.Contains(`0)">
            <summary>
            Checks if the Key is present in the Map
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.Contains(`1)">
            <summary>
            Checks if the Value is present in the Map
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.Remove(`0)">
            <summary>
            Removes a Key and the associated Value from the Map
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.Remove(`1)">
            <summary>
            Removes a Value and the associated Key from the Map
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.Keys">
            <summary>
            Returns the list of Keys as IEnumerable
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.Values">
            <summary>
            Returns the list of Values as IEnumerable
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.Item(`1)">
            <summary>
            Gets or Sets a Key, given a Value
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Map`2.Item(`0)">
            <summary>
            Gets or Sets a Value, given a Key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Colors">
            <summary>
            Utility class containing the translation of .net's default Colors to ColorRgba objects
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Colors.FromBase1Vector4(Duality.Vector4)">
            <summary>
            Converts a Vector4 with values between 0 and 1 to ColorRgba
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Colors.FromBase255Vector4(Duality.Vector4)">
            <summary>
            Converts a Vector4 with values between 0 and 255 to ColorRgba
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver">
            <summary>
            The BaseInputReceiver is an abstract Component that needs to be derived and its methods overridded in order
            to implement the necessary logic by your components.
            The type of methods called depend on the associated InputController and its configuration.
            </summary>
            <seealso cref="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController"/>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver.KeyDown(Duality.Input.KeyboardKeyEventArgs,SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.ModifierKeys)">
            <summary>
            Virtual KeyDown
            </summary>
            <param name="e"></param>
            <param name="k"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver.KeyUp(Duality.Input.KeyboardKeyEventArgs,SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.ModifierKeys)">
            <summary>
            Virtual KeyUp
            </summary>
            <param name="e"></param>
            <param name="k"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver.MouseDown(Duality.Input.MouseButtonEventArgs)">
            <summary>
            Virtual MouseDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver.MouseEnter">
            <summary>
            Virtual MouseEnter
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver.MouseLeave">
            <summary>
            Virtual MouseLeave
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver.MouseUp(Duality.Input.MouseButtonEventArgs)">
            <summary>
            Virtual MouseUp
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver.MouseWheel(Duality.Input.MouseWheelEventArgs)">
            <summary>
            Virtual MouseWheel
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputReceiverVisual">
            <summary>
            The InputReceiverVisual is a derived BaseInputReceiver that allows to send events directly to an ICmpRenderer
            GameObject. This allows to implement GUI elements such as Buttons, etc or to directly control a GameObject
            such as a Player character.
            </summary>
            <seealso cref="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController"/>
            <seealso cref="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver"/>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputReceiverVisual.OnDrag(Duality.Vector2)">
            <summary>
            Executed when dragged
            </summary>
            <param name="inDelta"></param>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputReceiverVisual.Draggable">
            <summary>
            [GET / SET] If the associated ICmpRenderer can be dragged by holding the Left Mouse Button
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputReceiverVisual.ReceiveKeys">
            <summary>
            [GET / SET] If the Component is notified of KeyUp and KeyDown events
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputReceiverVisual.ReceiveMouseClicks">
            <summary>
            [GET / SET] If the Component is notified of MouseUp and MouseDown events
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputReceiverVisual.ReceiveMouseWheel">
            <summary>
            [GET / SET] If the Component is notified of MouseWheel events
            </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController">
            <summary>
            This Component can be assigned to a Camera in order to detect and manage Input events such as Mouse and
            Keyboard events and redirect said events to a BaseInputReceiver.
            It allows to specify a default BaseInputReceiver which can receive all enabled events regardless of its
            current status, and also to manage InputVisualReceivers in a way that allows the implementation of a basic GUI.
            </summary>
            <seealso cref="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.BaseInputReceiver"/>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController._currentMousePosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController._draggedElement">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController._lastMousePosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController._modifierKeys">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.Drag(System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="inX"></param>
             <param name="inY"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.Keyboard_KeyDown(System.Object,Duality.Input.KeyboardKeyEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.Keyboard_KeyUp(System.Object,Duality.Input.KeyboardKeyEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.Mouse_ButtonDown(System.Object,Duality.Input.MouseButtonEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.Mouse_ButtonUp(System.Object,Duality.Input.MouseButtonEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.Mouse_Move(System.Object,Duality.Input.MouseMoveEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.Mouse_WheelChanged(System.Object,Duality.Input.MouseWheelEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.ShouldNotifyReceiver">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.AlwaysNotifyReceiver">
            <summary>
            [GET / SET] If the Receiver should always be notified of events even if there is a Focused InputVisualReceiver
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.FocusedElement">
            <summary>
            [GET] The currently Focused InputVisualReceiver
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.HoveredElement">
            <summary>
            [GET] The currently Hovered InputVisualReceiver
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.KeyboardEnabled">
            <summary>
            [GET / SET] If the Controller should register for Keyboard events
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.LeftMouseKey">
            <summary>
            [GET / SET] The Keyboard key that will be treated as a Left Mouse click
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.MiddleMouseKey">
            <summary>
            [GET / SET] The Keyboard key that will be treated as a Middle Mouse click
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.MouseEnabled">
            <summary>
            [GET / SET] If the Controller should register for Mouse events
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.Receiver">
            <summary>
            [GET / SET] The default BaseInputReceiver
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.RightMouseKey">
            <summary>
            [GET / SET] The Keyboard key that will be treated as a Right Mouse click
            </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.InputController.ModifierKeys">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander">
            <summary>
            The Commander is a Component in charge of managing the Commands for a single GameObject.
            It provides a series of predefined methods to generate and manage SnowyPeak.Duality.Plugin.Frozen.Core's included Commands,
            but also allows the user to register its own custom Commands.
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.Add``1(``0)">
            <summary>
            Adds a custom Command to the execution list or to the currently open parallel Command.
            </summary>
            <typeparam name="T">The Type of the Command that will be added</typeparam>
            <param name="inCommand">The Command</param>
            <returns>The Command added</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.BeginParallel">
            <summary>
            Tells the Commander that all the subsequent Commands will have to be carried out in parallel, until the
            EndParallel method is called
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.ColorizeSprite(Duality.Drawing.ColorRgba)">
            <summary>
            Adds a ColorizeSprite Command, from the current to the desired Color
            </summary>
            <param name="inColor">Target color</param>
            <returns>The ColorizeSprite Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.ColorizeText(Duality.Drawing.ColorRgba)">
            <summary>
            Adds a ColorizeText Command, from the current to the desired Color
            </summary>
            <param name="inColor">Target color</param>
            <returns>The ColorizeText Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.Destroy">
            <summary>
            Adds a Destroy Command
            </summary>
            <returns>The Destroy Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.EndParallel">
            <summary>
            Stops the addition of parallel Commands and marks them as ready for execution
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.MoveBy(Duality.Vector2)">
            <summary>
            Adds a XY Move Command to the desired position, relative to the current one
            </summary>
            <param name="inAmount">XY position</param>
            <returns>The Move Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.MoveBy(Duality.Vector3)">
            <summary>
            Adds a XYZ Move Command to the desired position, relative to the current one
            </summary>
            <param name="inAmount">XYZ position</param>
            <returns>The Move Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.MoveTo(Duality.Vector2)">
            <summary>
            Adds a XY Move Command to the desired absolute position
            </summary>
            <param name="inTarget">Target XY position</param>
            <returns>The Move Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.MoveTo(Duality.Vector3)">
            <summary>
            Adds a XYZ Move Command to the desired absolute position
            </summary>
            <param name="inTarget">Target XYZ position</param>
            <returns>The Move Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.MoveToRelative(Duality.Vector2)">
            <summary>
            Adds a XY Move Command to the desired position, relative to the parent GameObject
            </summary>
            <param name="inTarget">Target XY position</param>
            <returns>The Move Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.MoveToRelative(Duality.Vector3)">
            <summary>
            Adds a XYZ Move Command to the desired position, relative to the parent GameObject
            </summary>
            <param name="inTarget">Target XYZ position</param>
            <returns>The Move Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.RotateBy(System.Single)">
            <summary>
            Adds a Rotate Command to the desired angle, relative to the current one
            </summary>
            <param name="inAmount">angle</param>
            <returns>The Rotate Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.RotateTo(System.Single)">
            <summary>
            Adds a Rotate Command to the desired absolute angle
            </summary>
            <param name="inTarget">Target angle</param>
            <returns>The Rotate Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.RotateToRelative(System.Single)">
            <summary>
            Adds a Rotate Command to the desired angle, relative to the parent GameObject
            </summary>
            <param name="inTarget">Target angle</param>
            <returns>The Rotate Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.Scale(System.Single)">
            <summary>
            Adds a Scale Command to the desired absolute scale
            </summary>
            <param name="inTarget">Target scale</param>
            <returns>The Scale Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.ScaleRelative(System.Single)">
            <summary>
            Adds a Scale Command to the desired scale, relative to the current one
            </summary>
            <param name="inTarget">Target relative scale</param>
            <returns>The Scale Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.Signal(System.String)">
            <summary>
            Adds a Signal Command
            </summary>
            <param name="inSignal">The Signal to emit</param>
            <returns>The Signal Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.Wait(System.Single)">
            <summary>
            Adds a Wait Command
            </summary>
            <param name="inTimeToWait">The duration, in seconds, of the wait</param>
            <returns>The Wait Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.WaitFor(Duality.GameObject)">
            <summary>
            Adds a WaitFor Command, waiting until the other object has completed all its Commands
            </summary>
            <param name="inGameObject">The GameObject to wait for</param>
            <returns>The WaitFor Command</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.WaitFor(Duality.GameObject,System.String)">
            <summary>
            Adds a WaitFor Command, waiting until the other object issues a determined Signal
            </summary>
            <param name="inGameObject">The GameObject to wait for</param>
            <param name="inSignal">The Signal to wait for</param>
            <returns>The WaitFor Command</returns>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.CurrentSignal">
            <summary>
            The Last Signal emitted by a Signal Command
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.Commander.IsIdle">
            <summary>
            Indicates if there are no current or pending Commands to execute
            </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.ThreadedLoader">
            <summary>
            This Component is in charge of the asynchronous loading of a LoadableResource.
            The Resource is loaded using a separate thread working in background; the thread can be monitored
            by implementing the LoaderOnUpdate and LoadingComplete methods.
            <example>It's possible to have the LoadableResource set a volatile field from time to time that
            reflects the loading percentage. LoaderOnUpdate could be then be implemented in order to display
            such percentage, or affect a loading bar.</example>
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.ThreadedLoader.LoaderOnUpdate">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.ThreadedLoader.LoadingComplete">
             <summary>
            
             </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.ThreadedLoader.ResourceToLoad">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Components.VisualTreeHider">
            <summary>
            Component that can Mark an entire GameObject, its Childrens and all their Rendering Components as Active or Inactive
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.VisualTreeHider.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Components.VisualTreeHider.ToggleVisibility">
             <summary>
            
             </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Components.VisualTreeHider.IsTreeVisibile">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.CameraExtensions">
            <summary>
            Camera extensions
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.CameraExtensions.Fade(Duality.Components.Camera,System.Single,Duality.Drawing.ColorRgba,Duality.Drawing.ColorRgba)">
            <summary>
            Creates a GameObject covering the entirety of the Camera's viewport and applies a ColorizeSprite
            Command going from one Color to another
            </summary>
            <param name="inCamera">The Camera</param>
            <param name="inTime">The time, in milliseconds, that the transition will take</param>
            <param name="inStartColor">The starting color</param>
            <param name="inEndColor">The ending color</param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.CameraExtensions.FocusOn(Duality.Components.Camera,SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon,System.Single)">
            <summary>
            Moves the Camera on the XY plane, and alters the camera's FocusDist property in order to
            contain the entirety of the Target Area in the screen's viewport
            </summary>
            <param name="inCamera">The Camera</param>
            <param name="inFocusArea">A 2D Polygon representing the extent of the area to show on screen</param>
            <param name="inFocusZ">The reference Z coordinate of the area to show on screen</param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.CameraExtensions.LookAt(Duality.Components.Camera,SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon,System.Single)">
            <summary>
            Moves the Camera in 3D in order to contain the entirety of the Target Area in the screen's
            viewport
            </summary>
            <param name="inCamera">The Camera</param>
            <param name="inTargetArea">A 2D Polygon representing the extent of the area to show on screen</param>
            <param name="inTargetZ">The reference Z coordinate of the area to show on screen</param>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.FastMath">
            <summary>
            MathF extensions
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastMath.FastFloor(System.Single)">
            <summary>
            Fast Floor function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastMath.FastFloor(System.Double)">
            <summary>
            Fast Floor function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.RectExtensions">
            <summary>
            OpenTK Extensions
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.RectExtensions.Expand(Duality.Rect,System.Single)">
            <summary>
            Expands the Rect, on each side, by an amount
            </summary>
            <param name="inRect">The caller</param>
            <param name="inExpansion">The amount to expand each side</param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.RectExtensions.Multiply(Duality.Rect,Duality.Vector2)">
            <summary>
            Multiplies the Rect by the amount specified in a Vector2. 
            Useful to pass from UV coordinates to Pixmap coordinates
            </summary>
            <param name="inRect"></param>
            <param name="inVector"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.RectExtensions.Divide(Duality.Rect,Duality.Vector2)">
            <summary>
            Divides the Rect by the amount specified in a Vector2.
            Useful to pass from Pixmap coordinates to UV coordinates 
            </summary>
            <param name="inRect"></param>
            <param name="inVector"></param>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Vector4Extensions">
            <summary>
            Vector4 Extensions
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Vector4Extensions.XY(Duality.Vector4)">
            <summary>
            Returns the XY components as a Vector2
            </summary>
            <param name="inVector"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Vector4Extensions.ZW(Duality.Vector4)">
            <summary>
            Returns the ZW components as a Vector2
            </summary>
            <param name="inVector"></param>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Vector3Range">
            <summary>
            Implementation of Range for Vector3 values
            </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1">
            <summary>
            Abstract class used to interpolate and obtain random values between a maximum and a minimum defined.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1.#ctor(`0,`0)">
            <summary>
            Constructor
            </summary>
            <param name="inMin"></param>
            <param name="inMax"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1.GetRandom">
             <summary>
            
             </summary>
             <param name="inRandom">The random instance to use</param>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1.Lerp(System.Single)">
            <summary>
            Get the value corresponding to the required interpolation. Parameter must be between 0 and 1
            </summary>
            <param name="inValue"></param>
            <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1._Lerp(System.Single)">
             <summary>
            
             </summary>
             <param name="inValue"></param>
             <returns></returns>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1.Delta">
             <summary>
            
             </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1.Max">
             <summary>
            
             </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Range`1.Min">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Vector3Range.#ctor(Duality.Vector3,Duality.Vector3)">
             <summary>
            
             </summary>
             <param name="inMin"></param>
             <param name="inMax"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Vector3Range.GetRandom">
             <summary>
            
             </summary>
             <param name="inRandom"></param>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.Vector3Range._Lerp(System.Single)">
             <summary>
            
             </summary>
             <param name="inValue"></param>
             <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.GameObjectExtensions">
            <summary>
            GameObject extensions
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.GameObjectExtensions.FindAncestorWithComponent``1(Duality.GameObject)">
            <summary>
            Travels backwards through ancestors until one with the desired Component is found
            </summary>
            <typeparam name="T">The Type of the Component that should be looked for</typeparam>
            <param name="value">The caller</param>
            <returns>The first GameObject in the caller's ancestry containing a Component of the required type.
            null otherwise</returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.FrozenCorePlugin">
            <summary>
            Defines a Duality core plugin.
            </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Data.ColorRange">
            <summary>
            Implementation of Range for ColorRgba values
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.ColorRange.#ctor(Duality.Drawing.ColorRgba,Duality.Drawing.ColorRgba)">
             <summary>
            
             </summary>
             <param name="inMin"></param>
             <param name="inMax"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.ColorRange.GetRandom">
             <summary>
            
             </summary>
             <param name="inRandom"></param>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.ColorRange._Lerp(System.Single)">
             <summary>
            
             </summary>
             <param name="inValue"></param>
             <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Data.FloatRange">
            <summary>
            Implementation of Range for float values
            </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Data.FloatRange.DIRECTION_2PI">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Data.FloatRange.ONE">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Data.FloatRange.ZERO">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Data.FloatRange.ZERO_TO_ONE">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.FloatRange.#ctor(System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="inMin"></param>
             <param name="inMax"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.FloatRange.GetRandom">
             <summary>
            
             </summary>
             <param name="inRandom"></param>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.FloatRange._Lerp(System.Single)">
             <summary>
            
             </summary>
             <param name="inValue"></param>
             <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Data.IntegerRange">
            <summary>
            Implementation of Range for int values
            </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Data.IntegerRange.ONE">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Data.IntegerRange.ZERO">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Data.IntegerRange.ZERO_TO_ONE">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.IntegerRange.#ctor(System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="inMin"></param>
             <param name="inMax"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.IntegerRange.GetRandom">
             <summary>
            
             </summary>
             <param name="inRandom"></param>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Data.IntegerRange._Lerp(System.Single)">
             <summary>
            
             </summary>
             <param name="inValue"></param>
             <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom">
            <summary>
            Mono's Random implementation. Actually faster than System.Random
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="Seed"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.Next(System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="minValue"></param>
             <param name="maxValue"></param>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.Next(System.Int32)">
             <summary>
            
             </summary>
             <param name="maxValue"></param>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.Next">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.NextBytes(System.Byte[])">
             <summary>
            
             </summary>
             <param name="buffer"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.NextDouble">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.Reseed(System.Int32)">
            <summary>
            Sets the seed
            </summary>
            <param name="Seed"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.Sample">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.FastRandom.Instance">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Circle">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Circle.#ctor(Duality.Vector2,System.Single)">
             <summary>
            
             </summary>
             <param name="center"></param>
             <param name="radius"></param>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Circle.Center">
             <summary>
            
             </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Circle.Radius">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment.#ctor(System.Nullable{Duality.Vector2},System.Nullable{Duality.Vector2})">
             <summary>
            
             </summary>
             <param name="p0"></param>
             <param name="p1"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment.CompareLengths(SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment,SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment)">
             <summary>
            
             </summary>
             <param name="edge0"></param>
             <param name="edge1"></param>
             <returns></returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment.CompareLengths_MAX(SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment,SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment)">
             <summary>
            
             </summary>
             <param name="segment0"></param>
             <param name="segment1"></param>
             <returns></returns>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment.Length">
             <summary>
            
             </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment.P0">
             <summary>
            
             </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.LineSegment.P1">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Utilities">
            <summary>
            A collection of general-purpose methods, mainly used inside SnowyPeak.Duality.Plugin.Frozen.Core.
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Utilities.DrawCross(Duality.Drawing.Canvas,Duality.Vector3,System.Single)">
             <summary>
            
             </summary>
             <param name="inCanvas"></param>
             <param name="inPosition"></param>
             <param name="inRadius"></param>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Utilities.IsDualityEditor">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.MultiSpacePoint">
            <summary>
            Represents a Point in Scene, World and UV coordinates
            </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.MultiSpacePoint.SceneCoords">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.MultiSpacePoint.UVCoords">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.MultiSpacePoint.WorldCoords">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.MultiSpacePoint.Tint">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon">
            <summary>
            Models a Polygon as an ordered array of 2D, coplanar vertices
            </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.NO_POLYGON">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.#ctor(System.Int32)">
            <summary>
            Constructs an N-sided Polygon as an empty array of N elements
            </summary>
            <param name="inNumVertices"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.#ctor(System.Collections.Generic.IEnumerable{Duality.Vector2})">
            <summary>
            Constructs a Polygon starting from a list of vertices
            </summary>
            <param name="vertices"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.#ctor(Duality.Rect)">
            <summary>
            Constructs a Polygon starting from a Rect
            </summary>
            <param name="inRect"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.#ctor(Duality.Vector2,System.Single)">
            <summary>
            Constructs a regular Polygon centered around a point, with a defined radius
            </summary>
            <param name="inCenter"></param>
            <param name="inRadius"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.#ctor(Duality.Vector2,System.Single,System.Single,System.Int32)">
            <summary>
            Constructs a regular Polygon centered around a point, with a defined radius, and a defined number of
            subdivisions
            </summary>
            <param name="inCenter"></param>
            <param name="inRadius"></param>
            <param name="inSubdivisions"></param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.Contains(Duality.Vector2)">
            <summary>
            Determines if a Vector2 is inside or outside the Polygon
            </summary>
            <param name="inPoint"></param>
            <returns>True if the point is inside, false otherwise.</returns>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.Offset(Duality.Vector2)">
            <summary>
            Offsets each vertex in the polygon by the desired amouns
            </summary>
            <param name="inOffset">The offset to apply</param>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.OriginOnCentroid">
            <summary>
            Centers the Polygon on its Centroid, effectively making it Zero
            </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.Rotate(System.Single,System.Boolean)">
            <summary>
            Rotates the Polygon of a specified amount
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.Area">
            <summary>
            Returns the area of the Polygon
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.Centroid">
            <summary>
            Returns the Centroid of the Polygon, as the point where its extents are halved on each direction
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.Vertices">
            <summary>
            The vertices of the Polygon
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.Winding">
            <summary>
            Returns the Winding (Clockwise/Counterclockwise) of the Polygon's vertices
            </summary>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.Item(System.Int32)">
            <summary>
            Returns the i-index vertex of the Polygon
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.PolygonWinding">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.PolygonWinding.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.PolygonWinding.Clockwise">
             <summary>
            
             </summary>
        </member>
        <member name="F:SnowyPeak.Duality.Plugin.Frozen.Core.Geometry.Polygon.PolygonWinding.Counterclockwise">
             <summary>
            
             </summary>
        </member>
        <member name="T:SnowyPeak.Duality.Plugin.Frozen.Core.LoadableResource">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.LoadableResource.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.LoadableResource.LoadInBackground">
             <summary>
            
             </summary>
        </member>
        <member name="M:SnowyPeak.Duality.Plugin.Frozen.Core.LoadableResource._LoadInBackground">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:SnowyPeak.Duality.Plugin.Frozen.Core.LoadableResource.IsLoaded">
             <summary>
            
             </summary>
        </member>
    </members>
</doc>
